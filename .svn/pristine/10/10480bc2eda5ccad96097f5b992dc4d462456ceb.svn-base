<%@ page language="java" contentType="text/html; charset=UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<!-- jQuery -->
<script type="text/javascript"
	src="https://code.jquery.com/jquery-1.12.4.min.js"></script>
<!-- iamport.payment.js -->
<script type="text/javascript"
	src="https://cdn.iamport.kr/js/iamport.payment-1.2.0.js"></script>

<script type="text/javascript">
//beforeSend 전역변수 처리
const header="${_csrf.headerName}";
const token ="${_csrf.token}";

window.onload = function(){
	console.log("window.onload 실행되었습니다~");
	// 목록 불러오기
	loadAfterSchoolList();

	//날짜 포맷 생성  함수
	function dateFormat(date) {
		let dateFormat2 = date.getFullYear() +
		'-' + ( (date.getMonth()+1) < 9 ? "0" + (date.getMonth()+1) : (date.getMonth()+1) )+
		'-' + ( (date.getDate()) < 9 ? "0" + (date.getDate()) : (date.getDate()) );
		return dateFormat2;
	}
	
	// 카카오페이 결제
	requestPay = function(){
		var IMP = window.IMP; 
        IMP.init("imp67011510");	// 테스트용 가맹점ID(변경 X)
      
        /* 
       	주문번호 = 같은 값은 사용 불가(결제 할 때마다 새로운 값 필요)
		주문번호 만들 때 "코드" + 현재 시간 등으로 만들기 위한 makemerchantUid
		*/
        var today = new Date();   
        var hours = today.getHours(); // 시
        var minutes = today.getMinutes();  // 분
        var seconds = today.getSeconds();  // 초
        var milliseconds = today.getMilliseconds();
        var makeMerchantUid = hours +  minutes + seconds + milliseconds;
        
        // 데이터 가지고 오기
        let aschaCode = document.querySelector("#aschaCode").innerText; // 방과후코드
        let aschaNm = document.querySelector("#aschaNm").innerText;		// 방과후명
        let aschaAtnlcCt = document.querySelector("#aschaAtnlcCt").innerText;	// 방과후 금액
        let schoolNm = document.querySelector("#schoolNm").innerText;	// 학교이름
        let schoolAdres = document.querySelector("#schooolAdres").innerText;	// 학교 주소
        let schoolTelNo = document.querySelector("#schoolTelNo").innerText;		// 학교 연락처

        IMP.request_pay({
            pg : 'kakaopay', 						// kcp: 미리 등록한 카드로 결제, kakaopay
            pay_method : 'card',
            merchant_uid: aschaCode + makeMerchantUid,  // 주문번호
            name : aschaNm,								// 방과후명
            amount : aschaAtnlcCt,						// 가격(방과후 금액)
            buyer_name : schoolNm, 						// 판매자명(학교이름)
            buyer_tel : schoolTelNo,					// 판매자 전화번호(학교연락처)
            buyer_addr : schoolAdres					// 판매 주소(학교 주소)
           
        }, function (rsp) {
            if (rsp.success) {
                  // 서버 결제 API 성공시 로직
                  console.log(rsp);

                  let paymentInfo =
               	  {
                		"imp_uid" : rsp.imp_uid, 	// 주문번호
      					"amount" : rsp.paid_amount,		// 결제 금액
      					"payDate" :today,				// 결제 날짜
      					"aschaCode" : aschaCode,		// 방과후 코드
      					"mberId" : ""				// 결제자 아이디
               	  };
                 
                  console.log("paymentInfo : ",paymentInfo);
                  afterSchoolLecture(paymentInfo);
            } else {
            	alert(`결제에 실패하였습니다. 에러 내용: ${rsp.error_msg}`);
            }
        });	
	
	}
	
	// 카카오 페이 API로 결제 진행 후 수강정보테이블에 정보 insert
	afterSchoolLecture = function(paymentInfo) 
	{
		// 환불받을 계좌번호를 입력하기
		(async () => {
		    const { value: Acnut } = await Swal.fire({
		        title: '환불받을 계좌번호를 입력하세요.',
		        text: '환불시 해당 계좌번호로 입금됩니다.',
		        input: 'number',
		        inputPlaceholder: '계좌번호'
		    });

		    // 이후 처리되는 내용.
		    if (Acnut) {
		    	let data =
				{
					"atnlcReqstCode" : paymentInfo.imp_uid,
					"atnlcSetleAmount" : paymentInfo.amount,
					"atnlcSetleDt" : paymentInfo.payDate,
					"atnlcRefndAcnut" : Acnut,		// 환불받은 계좌번호
					"cmmnDetailCode" : "A10002",
					"aschaCode" : paymentInfo.aschaCode,
					"schulCode" : "${param.schulCode}",
					"stdntId" : "",
					"stdnprntId" : ""
				};
				console.log("data : ", data);
				
				$.ajax
				({
					url: "/afterSchool/afterSchoolPayment",
					contentType : "application/json; charset = utf-8",
					data: JSON.stringify(data),
					type: "post",
					dataType: "json",
					beforeSend : function(xhr){
						xhr.setRequestHeader(header,token);
					},
					success: function() 
					{
						Swal.fire(
								"방과후 신청 및 결제가 완료되었습니다.",
								"목록으로 돌아갑니다.",
								"success"
					          )

						console.log("결제 완료됨~!~!");
						$(".modal").modal("hide");
						loadAfterSchoolList();
					},
					
					error: function(xhr) 
					{
						Swal.fire(
								"결제를 실패하였습니다.",
								"다시 시도해주세요.",
								"error"
					          )
						console.log(`신청에 실패하였습니다. 에러 내용: ${xhr.status}`);
					},
					
				}); // ajax끝
		
		    }; // if문 끝
		
		})();// 계좌번호 입력 폼 끝
	};
	
	// 수강신청 버튼 클릭시 이벤트
	document.querySelector("#btnRegist").addEventListener("click", function(){
		Swal.fire({
			   title: '방과후 학교를 신청하시겠습니까?',
			   text: '',
			   icon: 'warning',
			   
			   showCancelButton: true, // cancel버튼 보이기. 기본은 원래 없음
			   confirmButtonColor: '#3085d6', // confrim 버튼 색깔 지정
			   cancelButtonColor: '#d33', // cancel 버튼 색깔 지정
			   confirmButtonText: '신청', // confirm 버튼 텍스트 지정
			   cancelButtonText: '취소', // cancel 버튼 텍스트 지정
			   
			   reverseButtons: false, // 버튼 순서 거꾸로
			   
			}).then(result => {
			   // 만약 Promise리턴을 받으면,
			   if (result.isConfirmed) { // 만약 모달창에서 confirm 버튼을 눌렀다면
			   
			      Swal.fire({
					   title: '결제화면으로 이동하시겠습니까?',
					   text: '취소시 미결제 상태로 등록됩니다.',
					   icon: 'warning',
					   
					   showCancelButton: true, // cancel버튼 보이기. 기본은 원래 없음
					   confirmButtonColor: '#3085d6', // confrim 버튼 색깔 지정
					   cancelButtonColor: '#d33', // cancel 버튼 색깔 지정
					   confirmButtonText: '이동', // confirm 버튼 텍스트 지정
					   cancelButtonText: '취소', // cancel 버튼 텍스트 지정
					   
					   reverseButtons: false, // 버튼 순서 거꾸로
					   
					}).then((result) => {
					      if (result.isConfirmed) {
					    	  requestPay();
					      }else if(result.dismiss ===Swal.DismissReason.cancel){ // 취소시
					    	  // 취소시 미결제 상태로 등록되는 ajax
					    	  let aschaCode = document.querySelector("#aschaCode").innerText; // 방과후코드
					    	  
					    	  let data =
							  {
					    			"atnlcSetleAmount": "",
					    			"atnlcSetleDt" : "",
									"atnlcRefndAcnut" : "",
									"cmmnDetailCode" : "A10005",
									"aschaCode" : aschaCode,
									"schulCode" : "${param.schulCode}",
									"stdntId" : "", // 값 들어오게 할 예정
									"stdnprntId" : ""// 값 들어오게 할 예정
							   };
					    	  
					    	  $.ajax({
					    		  url:"/afterSchool/afterSchoolPayment",
					    		  contentType:"application/json; charset = utf-8",
					    		  data: JSON.stringify(data),
					    		  type:"post",
					    		  dataType:"json",
					    		  beforeSend : function(xhr){
					    			  xhr.setRequestHeader(header, token);
					    		  },
					    		  success:function(){
							    	  Swal.fire(
								            '방과후 신청이 완료되었습니다.',
								            '추후 결제가 필요합니다.',
								            'info'
									   )
										console.log("신청 완료됨~!~!");
										$(".modal").modal("hide");
										loadAfterSchoolList();
					    		  },
					    		  error: function(xhr) 
									{
										Swal.fire(
												"방과후신청에 실패하였습니다.",
												"다시 시도해주세요.",
												"error"
									          )
										console.log(`신청에 실패하였습니다. 에러 내용: ${xhr.status}`);
									},
		
					    	  });// ajax 끝
					      	} 
					 });
			   } // if문 끝
			});
	}); // 수강신청 버튼클릭 이벤트 끝

	// 모달창 닫기 시작
	$('#btnCancle').on("click",function(){
		$(".modal").modal("hide");
	});
	
	// 상태 선택 조회
	document.querySelector("#cmmnAtnlcNm").addEventListener("change",function(){
		
		var selectStateNm = document.querySelector("#cmmnAtnlcNm").value;
		console.log(selectStateNm);
		// 상태 선택후 방과후 리스트 다시 불러옴.
		loadAfterSchoolList();
	});

	// 방과후 리스트 조회
	function loadAfterSchoolList(){
		let cmmnAtnlcNm =  "";
		let currentPage = "${param.currentPage}";
		if(currentPage =="") currentPage ="1";
// 		keyword = document.getElementById("keyword").value;
		
		
		let data = {
			"currentPage" : currentPage,	
			"keyword" 	  : "",
			"schulCode"	  : "${param.schulCode}",
			"cmmnAtnlcNm" : $("#cmmnAtnlcNm").val()
		};
		
		console.log("data : ",data);
		
		// 방과후 학교 목록
		$.ajax({
			url: "/afterSchool/afterSchoolList",
			contentType : "application/json; charset= utf-8",
			data: JSON.stringify(data),
			type : "post",
			dataType : "json",
			beforeSend : function(xhr){
				xhr.setRequestHeader(header, token);
			},
			success : function(result){
				// result : ArticlePage<AschaVO>
				console.log("result : ", result);
				let str = "";
				let schoolNm = "";
				let total = result.total;
				
				result.content.forEach(function(aschaVO, idx){
					let aschaAtnlcBgnde = dateFormat(new Date(aschaVO.aschaAtnlcBgnde));
					let aschaAtnlcEndde = dateFormat(new Date(aschaVO.aschaAtnlcEndde));
					// 수용인원 / 총인원 형식으로 출력
					let aschaAceptncPsncpa = aschaVO.totalStdnt + " / " +aschaVO.aschaAceptncPsncpa;
					schoolNm = aschaVO.schulNm;
					schooolAdres = aschaVO.schulAdres;
					schoolTelNo = aschaVO.schulTlphonNo;
					
					str += `
						<tr>
						<td>\${idx+1}</td>
						<td>\${aschaVO.aschaNm}</td>	
						<td>\${aschaAceptncPsncpa}</td>
						<td>\${aschaAtnlcBgnde}</td>
						<td>\${aschaAtnlcEndde}</td>
						<td>\${aschaVO.mberNm}</td>
						<td>
							<button class="pd-setting btnDetail" data-toggle="modal"
							data-aschaCode="\${aschaVO.aschaCode}" data-target="#afterSchoolDetail">상세보기</button>
						</td>
						<td>`;
						
						if (aschaVO.cmmnAtnlcNm==='신청 진행중'){
							str += `<button type="button" class="btn btn-custon-rounded-two btn-warning">신청 진행중</button>`;
						}else if(aschaVO.cmmnAtnlcNm==='수업 진행중'){
							str += `<button type="button" class="btn btn-custon-rounded-two btn-primary">수업 진행중</button>`;
						}else{
							str += `<button type="button" class="btn btn-custon-rounded-two btn-default btnComplete">종강</button>`;
						}							
					str +=`	
						</td>
						</tr>`;
				});
				document.querySelector("#listBody").innerHTML = str;
				document.getElementById("divPaging").innerHTML=result.pagingArea;
				document.querySelector("#totalLecture").innerHTML = total;
				document.querySelector("#schoolNm").innerHTML = schoolNm;
				document.querySelector("#schooolAdres").innerHTML = schooolAdres;
				document.querySelector("#schoolTelNo").innerHTML = schoolTelNo;
				
				console.log("str:",str);
				console.log("total : ", total);

			}
		});
	}
	
	   // 상세보기 모달
		$(document).on("click",".btnDetail",function(){
			console.log("상세보기 모달입니다");
			
			var aschaCode = $(this).attr("data-aschaCode");
			console.log("aschaCode :",aschaCode);
			
			let data = {
				"schulCode" : "${param.schulCode}",
				"aschaCode"	: aschaCode
			}
			console.log("data : ",data);
			
			$.ajax({
				url:"/afterSchool/afterSchoolDetail",
				contentType: "application/json; charset=utf-8",
				data: JSON.stringify(data),
				type: "post",
				dataType:"json",
				beforeSend : function(xhr){
					xhr.setRequestHeader(header, token);
				},
				success : function(result){
					console.log("result: ", result);
					
					if(result.length>0){
						let aschaAtnlcBgnde = dateFormat(new Date(result[0].aschaAtnlcBgnde));
						let aschaAtnlcEndde = dateFormat(new Date(result[0].aschaAtnlcEndde));
						// 수강신청한 인원 / 총인원 형식으로 출력
						let aschaAceptncPsncpa = result[0].totalStdnt + "명 / " +result[0].aschaAceptncPsncpa +"명";
						
						// 버튼 클릭시 수용인원이 다 찼을때 수강신청 못하게 하기.
						if(result[0].totalStdnt === result[0].aschaAceptncPsncpa){
							Swal.fire(
									"수강 인원이 마감되었습니다.",
									"다른 강의를 선택하세요.",
									"error"
				          ).then(function(){
						        $("#btnRegist").prop("disabled", true); // 버튼 비활성화  
				          });
						}else{
							$("#btnRegist").prop("disabled", false);// 버튼 활성화
						}
						
						// 종강, 수업진행중일때는 수강신청 버튼 가리기
						if(result[0].cmmnAtnlcNm ==='수업 진행중' || result[0].cmmnAtnlcNm === '종강'){
							$("#btnRegist").prop("disabled", true); // 버튼 비활성화
						}else{
							$("#btnRegist").prop("disabled", false);// 버튼 활성화 
						}
						
						$("#aschaCode").text(result[0].aschaCode);
						$("#aschaNm").text(result[0].aschaNm);
						$("#mberNm").text(result[0].mberNm);
						$("#aschaAtnlcBgnde").text(aschaAtnlcBgnde);
						$("#aschaAtnlcEndde").text(aschaAtnlcEndde);
						$("#aschaAceptncPsncpa").text(aschaAceptncPsncpa);
						$("#aschaDetailCn").text(result[0].aschaDetailCn);
						$("#aschaAtnlcCt").text(result[0].aschaAtnlcCt+"원");
						
						let str = "";
						result.forEach(function(aschaVO, idx){
							aschaVO.aschaWeekPlanVOList.forEach(function(aschaWeekPlanVO,index){
								str +=`
									<tr>
										<td>\${aschaWeekPlanVO.aschaWeek}</td>
										<td>\${aschaWeekPlanVO.aschaWeekPlanCn}</td>
									</tr>`;
							});
							
						});
						console.log("str : ", str);
						document.querySelector("#weekPlanTable").innerHTML = str;
					}
					
				}
					
			});
		
		});
}

</script>
<style>
#weekPlanTable table, #weekPlanTable th, #weekPlanTable td {
	border: 1px solid lightgray;
}

.pagination {
	display: inline-flex;
	padding-left: 0;
	margin: 20px 0;
	border-radius: 4px;
}

div.divInfo {
	display: inline-flex;
}
</style>

<!-- 방과후학교 목록 검색 -->
<div class="container-fluid">
	<div class="row">
		<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
			<div class="breadcome-list single-page-breadcome">
				<div class="divInfo">
					<h1 id="schoolNm"></h1>
					<h1>&nbsp;방과후학교 목록</h1>
					<div style="display: none;" id="schooolAdres"></div>
					<div style="display: none;" id="schoolTelNo"></div>
				</div>
				<p>${aschaVO.aschaNm}</p>
				<div class="row">
					<div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
						<div class="breadcome-heading">
							<form role="search" class="sr-input-func">
								<input type="text" placeholder="방과후학교 검색"
									class="search-int form-control"> <a href="#"><i
									class="fa fa-search"></i></a>
							</form>
							<!-- 검색 셀렉트 -->
							<div class="col-md-2 text-right">
							    <select class="form-control" id="cmmnAtnlcNm">
							        <option value="전체">전체</option>
							        <option value="신청 진행중">신청 진행중</option>
							        <option value="수업 진행중">수업 진행중</option>
							        <option value="종강">종강</option>
							    </select>
							</div>
							<!-- 검색 셀렉트 -->
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- 방과후학교 목록 검색 끝 -->
<!-- 방과후학교 목록 -->
<div class="product-status mg-b-15">
	<div class="container-fluid">
		<div class="row">
			<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
				<div class="product-status-wrap drp-lst">
					<div class="divInfo">
						<h4>개설과목 총&nbsp;</h4>
						<h4 id="totalLecture">개설과목</h4>
						<h4>개</h4>
					</div>

					<div>
						<button type="button" id=""
							class="btn btn-custon-rounded-four btn-primary">방과후학교 관리 바로가기</button>
					</div>
					<div class="asset-inner">
						<table>
							<thead>
								<tr>
									<th>번호</th>
									<th>방과후학교 명</th>
									<th>수용정원(명)</th>
									<th>수강시작일자</th>
									<th>수강종료일자</th>
									<!-- 									<th>요일</th> -->
									<th>담당선생님</th>
									<th>상세정보</th>
									<th>강의상태</th>
								</tr>
							</thead>

							<tbody id="listBody">
							</tbody>
						</table>
					</div>
					<div>
						<div class="pagination text-center" style="width: 100%;"
							id="divPaging"></div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- 방과후학교 상세보기 모달 -->
<div id="afterSchoolDetail"
	class="modal modal-edu-general default-popup-PrimaryModal fade in"
	role="dialog" style="display: none;">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header header-color-modal bg-color-1">
				<div class="modal-close-area modal-close-df">
					<a class="close" data-dismiss="modal" href="#"><i
						class="fa fa-close"></i></a>
				</div>
			</div>
			<div class="modal-body">

				<div id="aschaCode" style="display: none;">방과후 코드</div>
				<h2 id="aschaNm">방과후학교 명</h2>

				<div class="form-group">
					<label for="">담당 선생님</label>
					<div id="mberNm"></div>
				</div>

				<div class="form-group">
					<label for="">수강 기간</label>
					<div>
						<div id="aschaAtnlcBgnde"></div>
						~
						<div id="aschaAtnlcEndde"></div>
					</div>
				</div>

				<div class="form-group">
					<label for="">수강 비용</label>
					<div id="aschaAtnlcCt"></div>
				</div>

				<div class="form-group">
					<label for="">수용 인원</label>
					<div id="aschaAceptncPsncpa"></div>
				</div>

				<div class="form-group">
					<label for="">강의 설명</label>
					<div id="aschaDetailCn"></div>
				</div>

				<div class="form-group">
					<label for="">강의 계획서</label>
					<table id="weekPlanTable">
						<tr>
							<td></td>
							<td></td>
						</tr>
					</table>
				</div>

			</div>
			<div class="modal-footer">
				<!-- 학부모 버튼 -->
				<button type="button" id="btnRegist"
					class="btn btn-custon-rounded-four btn-primary">수강 신청</button>
				<button type="button" id="btnCancle"
					class="btn btn-custon-rounded-four btn-default">닫기</button>
			</div>
		</div>
	</div>
</div>
<!-- 방과후학교 상세보기 모달 끝-->