package kr.or.ddit.classroom.controller;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.classroom.service.GalleryService;
import kr.or.ddit.util.ArticlePage;
import kr.or.ddit.vo.AtchFileVO;
import kr.or.ddit.vo.ClasAlbumVO;
import kr.or.ddit.vo.ClasVO;
import kr.or.ddit.vo.MemberVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/gallery")
@Controller
public class GalleryController {
	
	@Autowired
	GalleryService galleryService;
	
	// 학급 갤러리 앨범 목록
	@GetMapping("/{clasCode}")
	public String albumList(Model model,
			@RequestParam(value = "clasCode", required = false, defaultValue = "") String clasCode) {
//		List<ClasAlbumVO> clasAlbumVOList = this.classroomService.clasAlbumList();
//		log.info("clasAlbumVOList : "+clasAlbumVOList);
//		
//		model.addAttribute("clasAlbumVOList", clasAlbumVOList);

		return "gallery/gallery";
	}

	// 학급 앨범 목록 AJAX - 페이지네이션 적용
	@ResponseBody
	@PostMapping("/albumListAjax")
	public ArticlePage<ClasAlbumVO> albumListAjax(@RequestBody Map<String, Object> map) {
		String clasCode = "OJ20240101";
		log.info("map : " + map);

		// 앨범 리스트
		List<ClasAlbumVO> clasAlbumVOList = this.galleryService.clasAlbumList2(map);
		log.info("list -> clasAlbumVOList :" + clasAlbumVOList);

		int total = this.galleryService.getTotalGallery(map);
		// list->total : 23
		log.info("list->total : " + total);
		int size = 8;

		String keyword = map.get("keyword").toString();
		log.info("albumListAjax->keyword : " + keyword);

		// 페이지네이션
		// ArticlePage(int total, int currentPage, int size, List<T> content, String
		// keyword)
		ArticlePage<ClasAlbumVO> data = new ArticlePage<ClasAlbumVO>(total,
				Integer.parseInt(map.get("currentPage").toString()), size, clasAlbumVOList, keyword);

		String url = "/gallery/gallery/" + clasCode;
		data.setUrl(url);

		log.info("clasAlbumVOList : " + clasAlbumVOList);

		return data;
	}

	// 앨범 추가
	@ResponseBody
	@PostMapping("/createAlbum") // FILE이 포함되어있으면 MULTIPART/FORM-DATA
	public List<ClasAlbumVO> createAlbum(ClasAlbumVO clasAlbumVO) {
		/*
		 * ClasAlbumVO(clasAlbumCode=null, albumNm=제목72, atchFileCode=null,
		 * clasCode=OJ20240101 , clasStdntCode=null, albumDe=Fri Mar 15 00:00:00 KST
		 * 2024, albumUpdtDe=null , mberNm=undefined, atchFileCours=null,
		 * atchFileVOList=null , albumTagVOList=[AlbumTagVO(tagCode=0,
		 * clasAlbumCode=null, tagNm=111) , AlbumTagVO(tagCode=0, clasAlbumCode=null,
		 * tagNm=222) , AlbumTagVO(tagCode=0, clasAlbumCode=null, tagNm=333)] ,
		 * uploadFile=[파일객체들])
		 */
		log.info("createAlbum -> clasAlbumVO : " + clasAlbumVO);

		int result = this.galleryService.createAlbum(clasAlbumVO);
		log.info("createAlbum-> result : " + result);

		List<ClasAlbumVO> clasAlbumVOList = this.galleryService.clasAlbumList(clasAlbumVO.getClasCode());

		log.info("clasAlbumVOList : " + clasAlbumVOList);

		return clasAlbumVOList;
	}

	// 학급 앨범 삭제
	@ResponseBody
	@PostMapping("/deleteAlbum")
	public int deleteAlbum(
			@RequestParam(value = "atchFileCode", required = false, defaultValue = "") String atchFileCode) {
		log.info("deleteAlbum-> atchFileCode: " + atchFileCode);
		int result = galleryService.deleteAlbum(atchFileCode);
		log.info("deleteAlbum->result : " + result);
		return result;
	}

	// 학급 앨범 수정
	@ResponseBody
	@PostMapping("/updateAlbum")
	public List<ClasAlbumVO> updateAlbum(ClasAlbumVO clasAlbumVO) {
		log.info("updateAlbum-> ClasAlbumVO: " + clasAlbumVO);

		int result = galleryService.updateAlbum(clasAlbumVO);
		log.info("updateAlbum-> result :" + result);

		// galleryDetailAjax->atchFileCode : OJ20240101ALB00003
		log.info("galleryDetailAjax->atchFileCode  : " + clasAlbumVO.getAtchFileCode());

		List<ClasAlbumVO> atchFileVOList = this.galleryService.galleryDetail(clasAlbumVO.getAtchFileCode());
		log.info("atchFileVOList : " + atchFileVOList);

		return atchFileVOList;
	}

	// 해시태그 목록
	@ResponseBody
	@PostMapping("/albumTagList")
	public List<String> albumTagList(
			@RequestParam(value = "clasCode", required = false, defaultValue = "") String clasCode) {
		clasCode = "OJ20240101";

		List<String> albumTagVOList = this.galleryService.albumTagList(clasCode);
//		AlbumTagList =>[고양이, 테스트, 동물]
		log.info("AlbumTagList =>" + albumTagVOList);
		return albumTagVOList;
	}

	// 학급 갤러리 상세 리스트
	@GetMapping("/galleryDetail")
	public String galleryDetail(Model model,
			@RequestParam(value = "atchFileCode", required = false, defaultValue = "") String atchFileCode,
			@RequestParam(value = "clasCode", required = false, defaultValue = "") String clasCode,
			@RequestParam(value = "complaint", required = false, defaultValue = "") String complaint,
			HttpServletRequest request) {
//		//atchFileCode : OJ20240101ALB00013
//		log.info("atchFileCode : " + atchFileCode);
//		//clasCode : 
//		log.info("clasCode : " + clasCode);
//		
//		ClasAlbumVO clasAlbumVO = this.classroomService.galleryDetail(atchFileCode);
//		log.info("galleryDetail->clasAlbumVO : "+clasAlbumVO);
//		
//		model.addAttribute("clasAlbumVO", clasAlbumVO);
//		model.addAttribute("clasCode", clasCode);
		
		// 세션에 저장된 클래스 정보 가져오기
		MemberVO memberVO = (MemberVO) request.getSession().getAttribute("USER_INFO");
		log.info("galleryDetail USER_INFO => " + memberVO);
		
		model.addAttribute("sessionMemberVO", memberVO);
		
		log.info("test complaint => " + complaint);
		
		String viewName = "gallery/galleryDetail";
		String flag = (!complaint.equals("")) ? "true" : "false";
		
		log.info("참 거짓 테스트22 => " + flag);
		
		if(!complaint.equals("")) {
			log.info("여기 들어왔음");
			viewName = "empty/gallery/galleryDetail";
		}
		return viewName;
	}

	// 학급 갤러리 상세리스트 AJAX
	@ResponseBody
	@GetMapping("/galleryDetailAjax")
	public List<ClasAlbumVO> galleryDetailAjax(
			@RequestParam(value = "atchFileCode", required = false, defaultValue = "") String atchFileCode) {
		// galleryDetailAjax->atchFileCode : OJ20240101ALB00003
		log.info("galleryDetailAjax->atchFileCode  : " + atchFileCode);

		List<ClasAlbumVO> atchFileVOList = this.galleryService.galleryDetail(atchFileCode);
		log.info("atchFileVOList : " + atchFileVOList);

		return atchFileVOList;
	}

	// 갤러리 사진 삭제
	@ResponseBody
	@PostMapping("/deleteImage")
	public int deleteImage(@RequestBody AtchFileVO atchFileVO) {

		log.info("atchFileVO : " + atchFileVO);

		int result = this.galleryService.deleteImage(atchFileVO);
		log.info("deleteImage->result : " + result);

		return result;
	}

	// 갤러리 사진 수정
	@ResponseBody
	@PostMapping("/updateImage")
	public int updateImage(@RequestBody AtchFileVO atchFileVO) {
		log.info("atchFileVO : " + atchFileVO);

		int result = this.galleryService.updateImage(atchFileVO);
		log.info("updateImage->result : " + result);

		return result;
	}
	
	/** 신고 후 신고 누적과 게시물 신고 상태 update하는 메서드 */
	@ResponseBody
	@PostMapping("/modNttSttemnt")
	public int modNttSttemnt(String atchFileCode) {
		int result = this.galleryService.modNttSttemnt(atchFileCode);
		log.info("modNttSttemnt result => " + result);
		
		return result;
	}
	
}
