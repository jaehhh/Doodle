<%@ page language="java" contentType="text/html; charset=UTF-8"
   pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<style>
.btnContainer{
   display: flex;
   justify-content: center;
}
.btnContainer .btn {
    margin-right: 10px;
}
.file-upload {
  width: 300px;
}
.input {
  display: flex;
  align-items: center;
}
.icon-right {
  margin-right: 10px;
}
.file-button {
  background-color: #007bff;
  color: #fff;
  padding: 8px 16px;
  margin-right: 10px;
  cursor: pointer;
  
}
.file-button input {
  display: none;
}
.file-button label {
  cursor: pointer;
}
.file-upload input[type="text"] {
  flex-grow: 1;
  padding: 8px;
  border: 1px solid #ced4da;
  width: calc(100% - 100px - 10px - 16px);
}
.input-file-button{
  background-color:#007bff;
  border-radius: 4px;
  color: white;
  cursor: pointer;
}

.task-form{
  margin-top: 10px;
}

.file-name{
  width: 300px;
  height: 32px;
  border-style: none;
}

.form-control{
  width: 100%;
}

label{
  margin-bottom: 0px;
}

</style>
<script type="text/javascript" src="/resources/js/jquery.min.js"></script>
<script type="text/javascript" src="/resources/js/cjh.js"></script>
<!-- 네이버 스마트 에디터 JS -->
<script type="text/javascript" src="/resources/se2/js/HuskyEZCreator.js" charset="UTF-8"></script>
<script type="text/javascript">
	var oEditors = [];
	var clasCode = "${taskVO.clasCode}";
	var taskCode = "${taskVO.taskCode}";
	var taskEndDt = cjh.modelDateFormat("${taskVO.taskEndDt}");
	var atchFileCode = "${taskVO.atchFileCode}";
// 	alert(atchFileCode);
	
	// 네이버 스마트 에디터 API
	$(function() {
		nhn.husky.EZCreator.createInIFrame({
        oAppRef : oEditors,
        elPlaceHolder : "se2Cn",
        //SmartEditor2Skin.html 파일이 존재하는 경로
        sSkinURI : '<c:url value="/resources/se2/SmartEditor2Skin.html"/>',
        htParams : {
        bUseToolbar : true,            	// 툴바 사용 여부 (true:사용/ false:사용하지 않음)
        bUseVerticalResizer : true,     // 입력창 크기 조절바 사용 여부 (true:사용/ false:사용하지 않음)
        bUseModeChanger : true,         // 모드 탭(Editor | HTML | TEXT) 사용 여부 (true:사용/ false:사용하지 않음)
        bSkipXssFilter : true,      	// client-side xss filter 무시 여부 (true:사용하지 않음 / 그외:사용)
        //aAdditionalFontList : aAdditionalFontSet,      // 추가 글꼴 목록
        fOnBeforeUnload : function(){
           //alert("완료!");
		},
//                   I18N_LOCALE : sLang
            }, //boolean
            fOnAppLoad : function(){
                  //예제 코드
//                   oEditors.getById["se2Cn"].exec("PASTE_HTML", ["로딩이 완료된 후에 본문에 삽입되는 text입니다."]);
            },
         fCreator: "createSEditor2"
      });
   });
   
$(function(){
	// 파일 이름 넣기
	$("#inputTask").on("input", function() {
		// 업로드한 파일 가져오기
        var files = $("#inputTask")[0].files;
        
        // 파일 이름들 가져오기
        var fileNames = [];
        for (var i = 0; i < files.length; i++) {
			fileNames.push(files[i].name);
		}

		$("#fileName").val(fileNames);
	});
      
	// 과제 게시글 수정
	$("#taskInsertBtn").click(function() {
		oEditors.getById["se2Cn"].exec("UPDATE_CONTENTS_FIELD", []);
		
		// 입력 정보들 가져오기
		var taskSj = $("#taskSj").val();
		var newTaskEndDt = $("#taskEndDt").val();
		console.log("taskSj: " + taskSj);
		console.log("newTaskEndDt: " + newTaskEndDt);
         
        // 에디터에 적은 내용 가져오기
        var taskCn = oEditors.getById["se2Cn"].getIR();
        $("#taskCn").val(taskCn);
        console.log("taskCn: " + taskCn);
        
        // 업로드한 파일 가져오기
        var files = $("#inputTask")[0].files;
        console.log("files", files);
        
        var formData = new FormData();

        // 마감일을 수정했을 때의 처리
        if(newTaskEndDt != null && newTaskEndDt != ""){
	        formData.append("taskEndDt", newTaskEndDt);
        };
        
        // 마감일이 오늘 이전일 때의 처리
        if(prevToday(newTaskEndDt) == false){
        	alert("과제 마감일은 오늘 이전의 일자로 설정할 수 없습니다.");
        	return;
        }
        
        formData.append("taskCode", taskCode);
        formData.append("clasCode", clasCode);
        formData.append("taskSj", taskSj);
        formData.append("taskCn", taskCn);
        formData.append("taskEndDt", taskEndDt);
        formData.append("atchFileCode", atchFileCode);
        
        for (var i = 0; i < files.length; i++) {
           formData.append("uploadFiles", files[i]);
        };
         
        console.log("formData: ", formData);
        
        $.ajax({
	        url: "/task/taskUpdate",
	        processData: false,
	         contentType: false,
	        type: "POST",
	        data: formData,
	        dataType: "text",
	        beforeSend:function(xhr){
	           xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
	        },
	        success: function(res){
	           console.log("res: ", res);
	           location.href = "/task/taskDetail?taskCode="+taskCode;
	        }
		});
	});
});
   
</script>
   <div class="col-md-10 col-md-10 col-sm-12 col-xs-12">
      <div class="hpanel email-compose">
         <div class="panel-heading hbuilt">
            <div class="p-xs h3">게시글 수정
            </div>
<%--             <br> ${taskVO} --%>
            <hr>
         </div>
         <div class="panel-heading hbuilt">
            <div class="p-xs">
               <form action="/task/insertTask?${_csrf.parameterName}=${_csrf.token}"
                    method="post" enctype="multipart/form-data" class="form-horizontal">
               <div class="form-group">
                  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 task-form">
                     <input type="text" class="form-control input-sm" name="taskSj"
                        id="taskSj" value="${taskVO.taskSj}">
                  </div>
                  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 task-form">
                  </div>
					<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 task-form">
						<div class="row">
							<div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
								<div class="input-group date">
									<span class="input-group-addon" style="font-weight: bold; color: #007bff">과제 마감일</span>
									<input type="date" id="taskEndDt" name="taskEndDt" class="form-control"
										value="${taskVO.taskEndDt}">
								</div>
							</div>
							<div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
								<div class="file-upload">
									<div class="input prepend-big-btn">
										<div class="file-button">
											<label class="input-file-button" for="inputTask">파일 첨부 <i class="fa fa-download"></i>
											</label>
											<input type="file" value="파일 첨부" name="uploadFile" id="inputTask" multiple>
											<input type="hidden" name="taskFile" id="taskFile" >
										</div>
										<input type="text" id="fileName" class="form-control"
											value="${taskVO.atchFileVOList[0].atchFileNm}">
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
				<textarea name="se2Cn" id="se2Cn" style="width: 100%; height: 412px;">
					${taskVO.taskCn}   
				</textarea>
				<textarea name="taskCn" id="taskCn" style="width: 100%; height: 200px; display: none;">
				
				</textarea>
            </form>
            </div>
         </div>

         <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <div class="btnContainer">
               <input type="button" id="taskInsertBtn"
                  class="btn btn-primary waves-effect waves-light btn" value="등록">
               <input type="button" value="취소" class="btn btn-primary waves-effect waves-light btn"
                  onclick="javascript:history.go(-1)">
               <input type="file" multiple="multiple" class="dz-hidden-input"
                  style="visibility: hidden; position: absolute; top: 0px; left: 0px; height: 0px; width: 0px;">
            </div>
         </div>
         </div>
      </div>
   </div>